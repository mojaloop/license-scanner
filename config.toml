[environment]

title = "License Scanner Config"

##
# What mode should we run the scanner in?
# options:
# - "standalone": will run the tool against all repos listed in the `repos` list (below)
# - "local": will run the tool against the repo defined in `pathToRepo`
# - "docker": will run the tool against the docker image defined in `dockerImage`
#
# Override with `mode` env variable
##
mode = 'local'

##
# How we should process the licenses
# options are: 
# - "fossa-api": will export to fossa api (requires FOSSA_API_KEY to be set in .env)
# - "fossa-json": will export from fossa to a folder of json files. This just shows import heirarchies, and doesn't scan licenses
# - "lc-csv": will use npm license-checker, and export to a list of csv files
# - "lc-summary": will use npm license-checker, and export a summary file for each repo
##
tool = "lc-csv"

##
# The path to the repo that will be scanned
# Ignored when `mode != "local"`
#
# e.g.
# pathToRepo = "/Users/ldaly/developer/vessels/mojaloop-github/ml-api-adapter"
#
# Override by setting `pathToRepo` env variable
##
pathToRepo = ""

##
# The docker image to be scanned
#
# Ignored when `mode != "docker"`
# Override by setting `dockerImage` env variable
##
dockerImage = ''

##
# The list of repos to scan

# Lines starting with a # will be ignored
# Ignored when `mode != "standalone"`
##
repos = [ ]


##
# A list of packages that we have manually audited and are ok with the license
# e.g.
# excludeListTest = ["z-schema@3.25.1"]
#
# will ignore z-schema@3.25.1 in the license check
##
excludeList = [
  "taffydb@2.6.2",
  "buffercursor@0.0.12" # has no license on github or npm
]

# A list of licenses that we won't allow in the repo, and will cause
# the tool to fail
failList = [
  "UNKNOWN",
  "GPL-1.0",
  "GPL-2.0",
  "GPL-3.0",
]
