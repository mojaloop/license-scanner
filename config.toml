# Example License Scanner Config - Standalong Version
# use this config for running license-scanner across multiple repos at once
# this is useful for running big audits across the entire Mojaloop codebase

[environment]

title = "License Scanner Config"

##
# What mode should we run the scanner in?
# options:
# - "standalone": will run the tool against all repos listed in the `repos` list (below)
# - "local": will run the tool against the repo defined in `pathToRepo`
# - "docker": will run the tool against the docker image defined in `dockerImage`
mode = 'local'


# How we should process the licenses
# options are: 
# - "fossa-api": will export to fossa api (requires FOSSA_API_KEY to be set in .env)
# - "fossa-json": will export from fossa to a folder of json files. This just shows import heirarchies, and doesn't scan licenses
# - "lc-csv": will use npm license-checker, and export to a list of csv files
# - "lc-summary": will use npm license-checker, and export a summary file for each repo
tool = "lc-csv"


##
# The path to the repo that will be scanned
# Ignored when `mode != "local"`
#
# e.g.
# pathToRepo = "/Users/ldaly/developer/vessels/mojaloop-github/ml-api-adapter"
#
# Override by setting `pathToRepo` env variable
##
pathToRepo = ""

##
# The docker image to be scanned
#
# Ignored when `mode != "docker"`
# Override by setting `dockerImage` env variable
##
dockerImage = 'mojaloop/central-ledger:latest'

##
# The list of repos to scan
# Lines starting with a # will be ignored
# Ignored when `mode != "standalone"`
##
repos = [
  "https://github.com/mojaloop/account-lookup-service",
  "https://github.com/mojaloop/central-ledger",
  "https://github.com/mojaloop/quoting-service",
  "https://github.com/mojaloop/central-event-processor",
  "https://github.com/mojaloop/ml-api-adapter",
  "https://github.com/mojaloop/simulator",
  "https://github.com/mojaloop/mock-pathfinder",
  "https://github.com/mojaloop/pathfinder-provisioning-client",
  "https://github.com/mojaloop/central-services-stream",
  "https://github.com/mojaloop/email-notifier",
  "https://github.com/mojaloop/central-settlement",
  "https://github.com/mojaloop/interop-switch-js",
  "https://github.com/mojaloop/central-services-shared",
  "https://github.com/mojaloop/central-services-error-handling",
  "https://github.com/mojaloop/central-services-auth",
  "https://github.com/mojaloop/central-services-database",
  "https://github.com/mojaloop/central-services-metrics",
  "https://github.com/mojaloop/forensic-logging-sidecar",
  "https://github.com/mojaloop/central-kms",
]

##
# A list of packages that we have manually audited and are ok with.
#
# string: Format: "<package>;<reason>"
#
#
# e.g.
# excludeList = [
#   "taffydb@2.6.2;Contains MIT license on github, but not listed in package.json"
# ]
#
# will ignore taffydb@2.6.2 in the license check, and put the "Contains MIT..." reason in the license-summary
##
excludeList = [
  "taffydb@2.6.2;Contains MIT license on github, but not listed in package.json",
  "buffercursor@0.0.12;No license on github or npm", # has no license on github or npm
  "cycle@1.0.3;Listed as Public-Domain on npm, but no License file in github",
  "spdx-exceptions@2.2.0;Requires attribution",
  "xmldom@0.1.27;Allows either MIT or LGPL License"
]

##
# A list of licenses that we won't allow in the repo, and will cause the tool to fail
##
failList = [
  "GPL-3",
  "LGPL-3.0",
  "AGPL-3.0",
  "MPL-2.0",
  "EPL-1.0",
  "Ms-RL",
  "ODbL",
  "RPL-1.5",
  "NGPL",
  "RSPL-1.0",
  "OCLC-2.0",
  "UNKNOWN",
  "GPL-1.0",
  "GPL-2.0",
  "GPL-3.0",
  "GPL",
  "Custom"
]
